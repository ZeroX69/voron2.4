[gcode_macro auto_speeed]
gcode:
  auto_speed
  
[gcode_macro G32]
gcode: 
  SET_VELOCITY_LIMIT ACCEL=8000
  SET_GCODE_OFFSET Z=0
  SET_PIN PIN=caselight VALUE=1.0
  status_homing
  #M104 S150
  #M190 S65
  #M109 S50
  BED_MESH_CLEAR
  G28
  #CLEAN_NOZZLE_1 
  #SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0   
  # STATUS_LEVELING
  status_calibrating_z
  QUAD_GANTRY_LEVEL
  #STATUS_HOMING
  #G28
  #M109 S250
  #G0 X43 Y350 Z10 F3600
  SET_PIN PIN=caselight VALUE=1.0
  #BIB
  status_ready
  # RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PARK]
gcode:  
  SET_PIN PIN=caselight VALUE=1
  status_homing
  G28
  status_calibrating_z
  QUAD_GANTRY_LEVEL
  #STATUS_HOMING
  #G28
  G0 X43 Y350 Z10 F3600
  #STATUS_BUSY
  SET_PIN PIN=caselight VALUE=1.0
  # RESTORE_GCODE_STATE NAME=STATE_G32

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
  {% set X = params.X|default(43)|float %}
  {% set Y = params.Y|default(350)|float %}
  {% set Z = params.Z|default(1)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state  

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X10 Y10     F27000
        G1 X340 Y340 F27000
        G1 X10 Y10     F27000
        G1 X340 Y340 F27000

        G1 X10 Y340 F36000

        G1 X340 Y10 F27000
        G1 X10 Y340 F27000
        G1 X350 Y10 F27000
        G1 X10 Y340 F27000

        G1 X10 Y10 F36000
        G1 X340 Y10 F36000

        G1 X10 Y10     F27000
        G1 X340 Y340 F27000
        G1 X10 Y10     F27000
        G1 X340 Y340 F27000

        G1 X10 Y340 F36000

        G1 X340 Y10 F27000
        G1 X10 Y340 F27000
        G1 X350 Y10 F27000
        G1 X10 Y340 F27000

        G1 X10 Y10 F36000
        G1 X340 Y10 F36000
        
        G1 X10 Y10     F27000
        G1 X340 Y340 F27000
        G1 X10 Y10     F27000
        G1 X340 Y340 F27000

        G1 X10 Y340 F36000

        G1 X340 Y10 F27000
        G1 X10 Y340 F27000
        G1 X350 Y10 F27000
        G1 X10 Y340 F27000

        G1 X10 Y10 F36000
        G1 X340 Y10 F36000

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro CALLIBRATE_Z]
#rename_existing: BASE_CALIBRATE_Z
gcode:
    M117 Z-Calibration..
    SET_GCODE_OFFSET Z=0
    CALIBRATE_Z
    M117   



#####################################################################################################################

[gcode_macro PRINT_START]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}                                   
  G32 
  status_meshing
  Attach_Probe
  SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1
  BED_MESH_CLEAR
  #BED_MESH_CALIBRATE SCAN_MODE=rapid METHOD=scan ADAPTIVE=1
  #BED_MESH_CALIBRATE METHOD=scan SCAN_MODE=rapid
  G0 Z5
  BED_MESH_CALIBRATE
  Dock_Probe
  CLEAN_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=default
  #BED_MESH_PROFILE LOAD=ABS
  SET_GCODE_OFFSET Z=-5.580 #-8.875 #adjust value to your liking to drop your z-offset height a little more
  SET_PIN PIN=caselight VALUE=01.0
  LINE_PURGE
  SET_IDLE_TIMEOUT TIMEOUT=10800
  status_printing

[gcode_macro PRINT_START_FAST_ABS]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}                                   
  QUAD_GANTRY_LEVEL
  status_meshing
  BED_MESH_CLEAR
  #BED_MESH_CALIBRATE METHOD=scan SCAN_MODE=rapid
  G0 Z5
  CLEAN_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=ABS
  SET_GCODE_OFFSET Z=0.250 #-8.875 #adjust value to your liking to drop your z-offset height a little more
  SET_PIN PIN=caselight VALUE=01.0
  LINE_PURGE
  SET_IDLE_TIMEOUT TIMEOUT=10800
  status_printing

[gcode_macro PRINT_START_PLA]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}
  G32
  SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  G0 X43 Y350 Z1 F3600
  #M109 S150
  NEO_HEATING
  M109 S215
  M190 S65
  #M190 S{temp_bed}
  #M109 S{temp_hotend}                         #Set temp and wait
  CLEAN_PURGE_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=default 
  NEO_PRINTING
  SET_PIN PIN=caselight VALUE=0.10
  LINE_PURGE

[gcode_macro PRINT_START_ABS]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}
  G32
  status_meshing
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE METHOD=scan SCAN_MODE=rapid
  G0 X231 Y353 Z1 F3600                           
  M109 S280
  M190 S105
  #M190 S{temp_bed}
  #M109 S{temp_hotend}                         #Set temp and wait
  CLEAN_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=default 
  SET_GCODE_OFFSET Z=0.100
  SET_PIN PIN=caselight VALUE=1.0
  LINE_PURGE
  SET_IDLE_TIMEOUT TIMEOUT=10800
  status_printing

[gcode_macro PRINT_START_PETG]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}
  G32
  SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  G0 X43 Y350 Z1 F3600                           
  #M109 S150
  NEO_HEATING
  M109 S230
  M190 S80
  #M109 S{temp_hotend}                         #Set temp and wait
  CLEAN_PURGE_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=default 
  NEO_PRINTING
  SET_PIN PIN=caselight VALUE=0.10
  LINE_PURGE

[gcode_macro PRINT_START_TPU]
gcode:
  #{% set temp_bed     = params.BED|int %}     
  #{% set temp_hotend  = params.HOTEND|int %}
  G32
  SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  G0 X43 Y350 Z1 F3600                           
  #M109 S150
  NEO_HEATING
  M109 S230
  M190 S35
  #M190 S{temp_bed}
  #M109 S{temp_hotend}                         #Set temp and wait
  CLEAN_PURGE_NOZZLE
  G90  
  BED_MESH_PROFILE LOAD=default 
  NEO_PRINTING
  SET_PIN PIN=caselight VALUE=0.10
  LINE_PURGE
#####################################################################################################################

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    #G1 E-20 F1800                 ; retract filament
    TURN_OFF_HEATERS
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    G1 Z10
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    CLEAN_NOZZLE
    #filament_cutter
    SET_GCODE_OFFSET Z=0
    M106 S0
    #BIB

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    SET_GCODE_OFFSET Z=0

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:  
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}  
    {% set x = params.X|default(sensor.park_position_x) %}   
    {% set y = params.Y|default(sensor.park_position_y) %}   
    {% set z = params.Z|default(sensor.park_lift_z)|float %} 
    {% set e = params.E|default(sensor.park_retraction) %}   
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_restore_temp VALUE={printer.heater_bed.target}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=extruder_restore_temp VALUE={printer.extruder.target}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state 
    SET_IDLE_TIMEOUT TIMEOUT=10800
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    G0 X43
   # SET_LED LED=OrbiLED RED=1.0 GREEN=1.0 BLUE=0.0

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_bed_restore_temp:0
variable_extruder_restore_temp:0
gcode:
    ##### set defaults #####
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %} 
    M118 Restoring heaters temperature, it might take a whyle!
    M140 S{bed_restore_temp}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_restore_temp}
    M104 S{extruder_restore_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_restore_temp}
    {% set e = params.E|default(sensor.park_retraction) %} 
    G91
    G1 E{e} F2100
    G90    
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[idle_timeout] 
timeout: 10800
gcode:
    {% if printer.pause_resume.is_paused %}
        M118 Bypassed Timeout
        M117 Bypassed Timeout
    {% else %}
        M118 Timeout Reached - Heaters and Motors Still On!
        M117 Timeout Reached - Heaters and Motors Still On!
        #TURN_OFF_HEATERS
        #M84
    {% endif %}

######################################################################################################################

[gcode_macro Z_UPDOWN]
gcode:
 G1 X180 F6000 G1 Y180 F6000
 G0 Z300 F2000
 G0 Z5 F2000
 G0 Z300 F2000
 G0 Z5 F2000
 G0 Z300 F2000
 G0 Z5 F2000

[gcode_macro TEST_TEMP]
gcode:
  m104 s65 
  #g4 p18000 
  #m104 s0
  m140 s40

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro Autoload_filament_macro]
gcode:
 T0                                                            ; select tool 0
 #M300 S2000 P100                                  ; play beep sound
 M291 P"Filament autoloading!" S0 T3   ; display message
 M302 P1                                                 ; enable cold extrusion
 G4 S1                                                     ; wait for one second
 G1 E15 F500                                          ; load filament inside the gears
 M109 S235 T0                                        ; set hotend temperature and wait
 G1 E110 F500                                        ; extrude 200mm, you may need to reduce speed for very soft TPU
 M104 S0 T0                                            ; set hotend temperature to 0
 M302 P0                                                 ; disable cold extrusion
 M291 P"Filament autoload complete!" S0 T3    ; display message

[gcode_macro Autounload_filament_macro]
gcode: 
 T0                                                         ; select tool 0
 #M300 S4000 P100                               ; play beep sound
 M291 P"Filament unloading!" S0 T3   ; display message
 M109 S235 T0                                     ; set hotend temperature to 235 and wait
 G0 E-5 F3600                                      ; extract filament to cold end
 G4 S3                                                  ; wait for 3 seconds
 G0 E5 F3600                                       ; push back the filament to strive stringing
 G0 E-15 F3600                                    ; Extract fast in the cold zone
 G0 E-70 F300                                      ; continue extraction slow allow filament to be cooled enough before reaches the gears
 M104 S0 T0                                         ; set hotend temperature to 0
 M291 P"Filament unload complete!" S0 T3   ; display message

